COT_3_shot_promtps = [
    # group 1
    ['def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. A frog lays her eggs over a series of 4 days.  The first day she lays 50 eggs.  The second day, she doubles her production of eggs.  The third day she lays 20 more than the second day, and the last day she doubles the first three days total.  How many eggs did the frog lay over the span of the 4 days?\nYour code must end with a "return result" line."""\n    # The first day she lays 50 eggs.\n    day_1 = 50\n    # The second day, she doubles her production of eggs.\n    day_2 = day_1 * 2\n    # The third day she lays 20 more than the second day, and the last day she doubles the first three days total.\n    day_3 = day_2 + 20\n    day_4 = (day_1 + day_2 + day_3) * 2\n    # How many eggs did the frog lay over the span of the 4 days?\n    result = day_1 + day_2 + day_3 + day_4\n    return      `',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Suzanne wants to raise money for charity by running a 5-kilometer race. Her parents have pledged to donate $10 for her first kilometer and double the donation for every successive kilometer. If Suzanne finishes the race, how much money will her parents donate?\nYour code must end with a "return result" line."""\n    # The first kilometer is worth $10\n    first_kilometer = 10\n    # The second kilometer is worth double the first kilometer\n    second_kilometer = first_kilometer * 2\n    # The third kilometer is worth double the second kilometer\n    third_kilometer = second_kilometer * 2\n    # The fourth kilometer is worth double the third kilometer\n    fourth_kilometer = third_kilometer * 2\n    # The fifth kilometer is worth double the fourth kilometer\n    fifth_kilometer = fourth_kilometer * 2\n    # The total amount of money Suzanne\'s parents will donate is the sum of all the donations\n    total_donation = first_kilometer + second_kilometer + third_kilometer + fourth_kilometer + fifth_kilometer\n    # Return the total donation\n    return total_donation',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. At the park, Dimitri saw families riding bicycles and tricycles. Bicycles have two wheels and tricycles have three wheels.  6 adults were riding bicycles and 15 children were riding tricycles.   How many wheels did Dimitri see at the park?\nYour code must end with a "return result" line."""\n    # number of adults riding bicycles\n    bicycles = 6\n    # number of children riding tricycles\n    tricycles = 15\n    # number of wheels on a bicycle\n    bicycle_wheels = 2\n    # number of wheels on a tricycle\n    tricycle_wheels = 3\n    # calculate the total number of wheels\n    total_wheels = (bicycles * bicycle_wheels) + (tricycles * tricycle_wheels)\n    # return the total number of wheels\n    return total_wheels'
    ],
 
    # group 2
    ['def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. An unusual bicycle has 20 spokes on the front wheel and twice as many spokes on the back wheel. How many spokes does the bicycle have?\nYour code must end with a "return result" line."""\n    # The number of spokes on the front wheel is 20\n    front_wheel_spokes = 20\n    # The number of spokes on the back wheel is twice as many as the front wheel\n    back_wheel_spokes = 2 * front_wheel_spokes\n    # The total number of spokes on the bicycle is the sum of the spokes on the front and back wheels\n    total_spokes = front_wheel_spokes + back_wheel_spokes\n    # Return the total number of spokes on the bicycle\n    return total_spokes',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. A town has ten neighborhoods, each having four roads passing through them. Each of the roads has 250 street lights on each opposite side. Calculate the total number of street lights on all the roads of the neighborhoods in the town.\nYour code must end with a "return result" line."""\n    # The number of streets in each neighborhood is 4\n    streets_per_neighborhood = 4\n    # The number of neighborhoods is 10\n    number_of_neighborhoods = 10\n    # The number of street lights on each side of each road is 250\n    street_lights_per_side = 250\n    # Calculate the total number of street lights on all the roads in the town\n    total_street_lights = streets_per_neighborhood * number_of_neighborhoods * street_lights_per_side * 2\n    # Return the total number of street lights\n    return total_street_lights',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Bill decides to bring donuts to work for a meeting that day.  He buys a box of donuts that has 50 in total in them.  He eats 2 on the ride in because he\'s hungry.  When he gets to the office, the secretary takes another 4 out of the box when he\'s not looking.  Lastly, right before the meeting Bill sets the box down on his desk and leaves the office to take a phone call.  While Bill\'s away, his coworkers steal half the remaining donuts.  Bill comes back and brings the box into his meeting.  How many donuts are left in the box?\nYour code must end with a "return result" line."""\n    # The box of donuts has 50 in total\n    box = 50\n    # Bill eats 2 on the ride in\n    box -= 2\n    # The secretary takes 4 out of the box\n    box -= 4\n    # Bill\'s coworkers steal half the remaining donuts\n    box //= 2\n    # Bill brings the box into his meeting\n    return box'
    ],

    # group 3
    ['def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Sarah\'s age is equal to three times Mark\'s age minus 4. Mark is four years older than Billy. Billy is half Ana\'s age. If Ana will be 15 in 3 years, how old is Sarah?\nYour code must end with a "return result" line."""\n    # Ana\'s age in 3 years\n    ana_age_in_3_years = 15\n    # Ana\'s current age\n    ana_age = ana_age_in_3_years - 3\n    # Billy\'s age\n    billy_age = ana_age / 2\n    # Mark\'s age\n    mark_age = billy_age + 4\n    # Sarah\'s age\n    sarah_age = 3 * mark_age - 4\n    # Return Sarah\'s age\n    return sarah_age',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Henry drinks 15 bottles of kombucha every month.  Each bottle costs $3.00 and is eligible for a cash refund of $0.10 per bottle when he takes it to a recycling center.  After 1 year, how many bottles of kombucha will he be able to buy after he receives his cash refund?\nYour code must end with a "return result" line."""\n    # number of bottles Henry drinks every month\n    bottles_per_month = 15\n    # cost of each bottle\n    cost_per_bottle = 3.00\n    # cash refund per bottle\n    refund_per_bottle = 0.10\n    # number of months in a year\n    months_per_year = 12\n    # total number of bottles Henry drinks in a year\n    total_bottles = bottles_per_month * months_per_year\n    # total cost of bottles in a year\n    total_cost = total_bottles * cost_per_bottle\n    # total cash refund in a year\n    total_refund = total_bottles * refund_per_bottle\n    # number of bottles Henry can buy after receiving his cash refund\n    bottles_after_refund = total_bottles - (total_cost - total_refund) / cost_per_bottle\n    # return the number of bottles Henry can buy after receiving his cash refund\n    return int(bottles_after_refund)',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Annie plants 3 pots of basil, 9 pots of rosemary, and 6 pots of thyme. Each basil plant has 4 leaves, each rosemary plant has 18 leaves, and each thyme plant has 30 leaves. How many leaves are there total?\nYour code must end with a "return result" line."""\n    # number of pots of basil\n    basil_pots = 3\n    # number of pots of rosemary\n    rosemary_pots = 9\n    # number of pots of thyme\n    thyme_pots = 6\n    # number of leaves per basil plant\n    basil_leaves = 4\n    # number of leaves per rosemary plant\n    rosemary_leaves = 18\n    # number of leaves per thyme plant\n    thyme_leaves = 30\n    # total number of basil leaves\n    total_basil_leaves = basil_pots * basil_leaves\n    # total number of rosemary leaves\n    total_rosemary_leaves = rosemary_pots * rosemary_leaves\n    # total number of thyme leaves\n    total_thyme_leaves = thyme_pots * thyme_leaves\n    # total number of leaves\n    total_leaves = total_basil_leaves + total_rosemary_leaves + total_thyme_leaves\n    # return the total number of leaves\n    return total_leaves'
    ],

    # group 4
    ['def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. 25% of oysters have pearls in them. Jamie can collect 16 oysters during each dive. How many dives does he have to make to collect 56 pearls?\nYour code must end with a "return result" line."""\n    # number of pearls in oysters\n    pearls_per_oyster = 0.25\n    # number of oysters collected per dive\n    oysters_per_dive = 16\n    # number of pearls to collect\n    pearls_to_collect = 56\n    # number of dives needed to collect pearls\n    dives_needed = pearls_to_collect / (pearls_per_oyster * oysters_per_dive)\n    # round up to the nearest integer\n    dives_needed = math.ceil(dives_needed)\n    # return the number of dives needed\n    return dives_needed',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Sasha can complete 15 questions an hour. If she has 60 questions to complete and she works for 2 hours, how many questions does she still need to complete?\nYour code must end with a "return result" line."""\n    # number of questions Sasha can complete in an hour\n    questions_per_hour = 15\n    # total number of questions Sasha has to complete\n    total_questions = 60\n    # number of hours Sasha works\n    hours_worked = 2\n    # calculate the number of questions Sasha can complete in the given time\n    questions_completed = questions_per_hour * hours_worked\n    # calculate the number of questions Sasha still needs to complete\n    questions_remaining = total_questions - questions_completed\n    # return the number of questions Sasha still needs to complete\n    return questions_remaining',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Jasper will serve charcuterie at his dinner party. He buys 2 pounds of cheddar cheese for $10, a pound of cream cheese that cost half the price of the cheddar cheese, and a pack of cold cuts that cost twice the price of the cheddar cheese. How much does he spend on the ingredients?\nYour code must end with a "return result" line."""\n    # Define the price of the cheddar cheese\n    cheddar_price = 10\n    # Calculate the price of the cream cheese\n    cream_price = cheddar_price / 2\n    # Calculate the price of the cold cuts\n    cold_cuts_price = cheddar_price * 2\n    # Calculate the total cost of the ingredients\n    total_cost = cheddar_price + cream_price + cold_cuts_price\n    # Return the total cost of the ingredients\n    return total_cost'
    ],

    # group 5
    ['def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Jennifer bought twice as many candies as Emily and three times as many as Bob bought. If Emily bought 6 candies, how many candies did Bob buy?\nYour code must end with a "return result" line."""\n    # Emily bought 6 candies\n    emily_candies = 6\n    # Jennifer bought twice as many candies as Emily\n    jennifer_candies = 2 * emily_candies\n    # Jennifer bought three times as many candies as Bob bought\n    bob_candies = jennifer_candies / 3\n    # Bob bought x candies\n    result = bob_candies\n    return result',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Christina and her friend are driving across the state. When Christina is driving the speed limit is 30 miles per hour. When her friend is driving, the speed limit is 40 miles per hour. The drive is 210 miles total. If her friend drives for 3 hours and both drive at the speed limit, how many minutes will Christina drive?\nYour code must end with a "return result" line."""\n    # The total distance is 210 miles\n    total_distance = 210\n    # Christina drives at 30 miles per hour\n    christina_speed = 30\n    # Her friend drives at 40 miles per hour\n    friend_speed = 40\n    # Her friend drives for 3 hours\n    friend_time = 3\n    # Calculate the distance Christina\'s friend drives\n    friend_distance = friend_speed * friend_time\n    # Calculate the distance Christina drives\n    christina_distance = total_distance - friend_distance\n    # Calculate the time Christina drives in hours\n    christina_time = christina_distance / christina_speed\n    # Convert the time Christina drives to minutes\n    christina_time_minutes = christina_time * 60\n    # Return the time Christina drives in minutes\n    return christina_time_minutes',
    'def problem() -> int:\n    """You carefully provide accurate answers, and are brilliant at math and reasoning.\nThink thoroughly of your code, explain the reasoning of each line of code in a comment.\nSolve the following problem. Madeline wants to plant 20 flowers in her garden. She assumes that about half of the seeds she plants will die before they bloom. However, the flower shop only sells packs of seeds with 25 seeds per pack. Each pack is $5. How much will Madeline spend on seeds to plant 20 flowers?\nYour code must end with a "return result" line."""\n    # number of flowers to plant\n    flowers = 20\n    # seeds per pack\n    seeds_per_pack = 25\n    # cost per pack\n    cost_per_pack = 5\n    # calculate the number of packs needed\n    packs_needed = math.ceil(flowers / (seeds_per_pack / 2))\n    # calculate the total cost\n    total_cost = packs_needed * cost_per_pack\n    # return the total cost\n    return total_cost'
    ],
]
